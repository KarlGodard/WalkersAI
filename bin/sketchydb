#!/bin/bash
# sketchydb

# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "create")
    if [ -f "var/sketchy.sqlite3" ]; then
       echo "Error: database already exists" 
    else
       mkdir -p var/data
       sqlite3 var/sketchy.sqlite3 < sql/schema.sql
       sqlite3 var/sketchy.sqlite3 ".mode csv" ".import sql/data/Artists.csv artists" ".exit"
       sqlite3 var/sketchy.sqlite3 ".mode csv" ".import sql/data/Artworks.csv artworks" ".exit"
    fi

    ;;

  "destroy")
    rm -rf var/sketchy.sqlite3 var/data
    ;;

  "reset")
    rm -rf var/sketchy.sqlite3 var/data
    mkdir -p var/data
       sqlite3 var/sketchy.sqlite3 < sql/schema.sql
       sqlite3 var/sketchy.sqlite3 ".mode csv" ".import sql/data/Artists.csv artists" ".exit"
       sqlite3 var/sketchy.sqlite3 ".mode csv" ".import sql/data/Artworks.csv artworks" ".exit"
    ;;

  "dump")
    sqlite3 -batch -line var/sketchy.sqlite3 'SELECT * FROM artists LIMIT 10'
    sqlite3 -batch -line var/sketchy.sqlite3 'SELECT * FROM artworks LIMIT 10'
    ;;
    *)
    usage
    exit 1
    ;;
esac
